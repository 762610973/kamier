//! 定义容器内外grpc通信的接口
syntax = "proto3";

package container;

option go_package = "./;container";
message Pid {
  string nodeName = 1;
  int64 serial = 2;
}

// 开始准备时的请求参数
message PrepareReq {
  Pid pid = 1;
}

// 准备完成时的响应
message PrepareRes {}

message FetchReq{
  Pid pid = 1;
}
message FetchRes{
  bytes res = 1;
}
message AppendReq {
  int32 Type = 1;
  string nodeName = 2;
}
// AppendRes 添加值响应
message AppendRes {}
message WatchRes {}

// watch 公开值请求结构体
message WatchReq{
  string nodeName = 1;
  int64 serial = 2;
  // 目标节点号
  int64 targetSite = 3;
}



service ContainerService {
  // 准备值
  rpc PrepareValue(PrepareReq) returns (PrepareRes);
  // 获取值
  rpc FetchValue(FetchReq) returns (FetchRes);
  // Append 添加值
  rpc AppendValue(AppendReq) returns (AppendRes);
  // watch完成标记
  rpc WatchValue(WatchReq) returns (WatchRes);
}